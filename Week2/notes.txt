create a payroll algorithm so the user can 
input their hours and rate 
and see what their gross pay and then
 calculate and display their net pay. 
 You should also calculate and display the taxes individually
A person working more than 40 hours receives
 time and a half for all hours over 40.

Make sure you plan for the overtime in your algorithm.
Federal tax will be a fixed rate of 18%
Social Security tax will be a fixed rate of 7.65%
The net pay will be the result of subtracting all taxes from the gross
Create flow and IPO charts for the program
Submit your doc in Canvas


Input: Hours, Rate
Output: Net Pay, Taxes

hours as decimal
rate as decimal
gross as decimal
net as decimal //gross - federal - ss
taxes as decimal 
federalTaxes as decimal
socialSecurityTaxes as decimal
federalTaxRate = .18
socialSecurityTaxRate = .0765

if hours>40 then
    //time and a half: in addition to the employee's standard hourly rate, they
    // will get paid an additional one half of that rate for each hour worked in
    // the time and a half window.
    gross = (hours * rate) + ((hours -40) * .5 * rate)
else
    gross = (hours * rate)
end if
 
//taxes get rounded to nearest whole cent in most states and situations
federalTaxes = gross * federalTaxRate //rounding if necessary
socialSecurityTaxes = gross * socialSecurityTaxRate //rounding if necessary
taxes = federalTaxes + socialSecurityTaxes

net = gross - taxes

//test cases
//38 hours at $10
//hours = 38
//rate = 10
//gross = 38 * 10 = 380
//federalTaxes = 380 * .18 = 68.4
//socialSecurityTaxes = 380 * .0765 = 29.07
//taxes = 68.4 + 29.07 = 97.47
//net = 380 - 97.47 = 282.53

//45 hours at $10 - gets time and a half
//hours = 45
//rate = 10
//gross = (45 * 10) + ((45-40) * .5 * 10) = 450 + (5 * .5 * 10) = 450 + 25 = 475
//federalTaxes = 475 * .18 = 85.5
//socialSecurityTaxes = 475 * .0765 = 36.3375 //round to 36.34
//taxes = 85.5 + 36.34 = 121.84
//net = 475 - 121.84 = 353.16